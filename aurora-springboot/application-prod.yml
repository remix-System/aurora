# 您可以根据下面内容来对nacos创建配置
server:
  port: 8080

spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://ip:3306/aurora?serverTimezone=Asia/Shanghai&allowMultiQueries=true
    username: 
    password: 
    druid:
      initialSize: 5
      minIdle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙，此处是filter修改的地方
      filter:
        commons-log:
          connection-logger-name: stat,wall,knife4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: true

  redis:
    host: 
    port: 6379
    password: 
    database: 1
    lettuce:
      pool:
        max-idle: 100
        max-active: 100
        max-wait: 10000
        min-idle: 10

  rabbitmq:
    host: 
    port: 5672
    username: guest
    password: guest
    listener:
      simple:
        retry:
          enabled: true
          max-attempts: 3
          initial-interval: 3000

  elasticsearch:
    rest:
      uris: 
  mail:
    host: smtp.exmail.qq.com
    username: 
    password: 
    default-encoding: UTF-8
    protocol: smtp
    port: 465
    properties:
      mail:
        smtp:
          auth: true
          socketFactory:
            class: javax.net.ssl.SSLSocketFactory
            port: 465
          ssl:
            enable: true
          starttls:
            enable: true
            required: true

  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB

mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true

search:
  mode: elasticsearch

upload:
  mode: minio
  oss:
    url: 
    endpoint: 
    accessKeyId: 
    accessKeySecret: 
    bucketName: 
  minio:
    url: 
    endpoint: 
    accesskey: 
    secretKey: 
    bucketName: 

knife4j:
  enable: true
  production: true


website:
  url: 

qq:
  app-id: 
  check-token-url: https://graph.qq.com/oauth2.0/me?access_token={access_token}
  user-info-url: https://graph.qq.com/user/get_user_info?openid={openid}&access_token={access_token}&oauth_consumer_key={oauth_consumer_key}

xf-spark:
  hostUrl: 'https://spark-api.xf-yun.com/v3.1/chat' # 2.0
  appId: ''
  apiSecret: ''
  apiKey: ''
  # 最大响应时间，单位：秒
  maxResponseTime: 30
